name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: nirbhay123/nodeapp # Replace with your Docker Hub username
  DOCKER_REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Debug SSH Configuration
        run: |
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "EC2_USERNAME: ${{ secrets.EC2_USERNAME }}"
          ping -c 4 ${{ secrets.EC2_HOST }} || true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Login to Docker Hub
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Stop and remove existing container if it exists
            docker stop nodeapp || true
            docker rm nodeapp || true

            # Pull the latest image
            docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

            # Run the container with environment variables
            docker run -d --name nodeapp \
              -p 3000:3000 \
              -e SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
              -e SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} \
              -e PORT=3000 \
              ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest
